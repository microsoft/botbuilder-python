trigger:
  branches:
    include:
    - daveta-python-functional
    exclude:
    - master

variables:
  # Container registry service connection established during pipeline creation
  imageName: 'functionaltestpy'
  dockerRegistryServiceConnection: 'E2E Functional Docker Registry'
  dockerFilePath: 'libraries/functional-tests/functionaltestbot/Dockerfile'
  tag: 'python'

jobs:
# Build and publish container
- job: buildPush
  pool:
    vmImage: 'Ubuntu-16.04'
  displayName: Build and push bot image
  continueOnError: false

  steps:
  - script: echoÂ Building..
  - task: Docker@2
    displayName: Build and push bot image
    inputs:
      command: buildAndPush
      repository: $(imageName)
      dockerfile: $(dockerFilePath)
      containerRegistry: $(dockerRegistryServiceConnection)
      tags: $(tag)

- job: provisionContainer
  container:
    image: $(imageName)
    endpoint: $(dockerRegistryServiceConnection)
  steps:
  - script: echo hello

# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class MessageActionsPayload(Model):
    """Represents the individual message within a chat or channel where a message
    actions is taken.

    :param id: Unique id of the message.
    :type id: str
    :param reply_to_id: Id of the parent/root message of the thread.
    :type reply_to_id: str
    :param message_type: Type of message - automatically set to message.
     Possible values include: 'message'
    :type message_type: str or ~botframework.connector.teams.models.enum
    :param created_date_time: Timestamp of when the message was created.
    :type created_date_time: str
    :param last_modified_date_time: Timestamp of when the message was edited
     or updated.
    :type last_modified_date_time: str
    :param deleted: Indicates whether a message has been soft deleted.
    :type deleted: bool
    :param subject: Subject line of the message.
    :type subject: str
    :param summary: Summary text of the message that could be used for
     notifications.
    :type summary: str
    :param importance: The importance of the message. Possible values include:
     'normal', 'high', 'urgent'
    :type importance: str or ~botframework.connector.teams.models.enum
    :param locale: Locale of the message set by the client.
    :type locale: str
    :param from_property: Sender of the message.
    :type from_property:
     ~botframework.connector.teams.models.MessageActionsPayloadFrom
    :param body: Plaintext/HTML representation of the content of the message.
    :type body: ~botframework.connector.teams.models.MessageActionsPayloadBody
    :param attachment_layout: How the attachment(s) are displayed in the
     message.
    :type attachment_layout: str
    :param attachments: Attachments in the message - card, image, file, etc.
    :type attachments:
     list[~botframework.connector.teams.models.MessageActionsPayloadAttachment]
    :param mentions: List of entities mentioned in the message.
    :type mentions:
     list[~botframework.connector.teams.models.MessageActionsPayloadMention]
    :param reactions: Reactions for the message.
    :type reactions:
     list[~botframework.connector.teams.models.MessageActionsPayloadReaction]
    """

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "reply_to_id": {"key": "replyToId", "type": "str"},
        "message_type": {"key": "messageType", "type": "str"},
        "created_date_time": {"key": "createdDateTime", "type": "str"},
        "last_modified_date_time": {"key": "lastModifiedDateTime", "type": "str"},
        "deleted": {"key": "deleted", "type": "bool"},
        "subject": {"key": "subject", "type": "str"},
        "summary": {"key": "summary", "type": "str"},
        "importance": {"key": "importance", "type": "str"},
        "locale": {"key": "locale", "type": "str"},
        "from_property": {"key": "from", "type": "MessageActionsPayloadFrom"},
        "body": {"key": "body", "type": "MessageActionsPayloadBody"},
        "attachment_layout": {"key": "attachmentLayout", "type": "str"},
        "attachments": {
            "key": "attachments",
            "type": "[MessageActionsPayloadAttachment]",
        },
        "mentions": {"key": "mentions", "type": "[MessageActionsPayloadMention]"},
        "reactions": {"key": "reactions", "type": "[MessageActionsPayloadReaction]"},
    }

    def __init__(
        self,
        *,
        id: str = None,
        reply_to_id: str = None,
        message_type=None,
        created_date_time: str = None,
        last_modified_date_time: str = None,
        deleted: bool = None,
        subject: str = None,
        summary: str = None,
        importance=None,
        locale: str = None,
        from_property=None,
        body=None,
        attachment_layout: str = None,
        attachments=None,
        mentions=None,
        reactions=None,
        **kwargs
    ) -> None:
        super(MessageActionsPayload, self).__init__(**kwargs)
        self.id = id
        self.reply_to_id = reply_to_id
        self.message_type = message_type
        self.created_date_time = created_date_time
        self.last_modified_date_time = last_modified_date_time
        self.deleted = deleted
        self.subject = subject
        self.summary = summary
        self.importance = importance
        self.locale = locale
        self.from_property = from_property
        self.body = body
        self.attachment_layout = attachment_layout
        self.attachments = attachments
        self.mentions = mentions
        self.reactions = reactions

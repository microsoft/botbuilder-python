# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .o365_connector_card_input_base_py3 import O365ConnectorCardInputBase


class O365ConnectorCardTextInput(O365ConnectorCardInputBase):
    """O365 connector card text input.

    :param type: Input type name. Possible values include: 'textInput',
     'dateInput', 'multichoiceInput'
    :type type: str or ~botframework.connector.teams.models.enum
    :param id: Input Id. It must be unique per entire O365 connector card.
    :type id: str
    :param is_required: Define if this input is a required field. Default
     value is false.
    :type is_required: bool
    :param title: Input title that will be shown as the placeholder
    :type title: str
    :param value: Default value for this input field
    :type value: str
    :param is_multiline: Define if text input is allowed for multiple lines.
     Default value is false.
    :type is_multiline: bool
    :param max_length: Maximum length of text input. Default value is
     unlimited.
    :type max_length: float
    """

    _attribute_map = {
        "type": {"key": "@type", "type": "str"},
        "id": {"key": "id", "type": "str"},
        "is_required": {"key": "isRequired", "type": "bool"},
        "title": {"key": "title", "type": "str"},
        "value": {"key": "value", "type": "str"},
        "is_multiline": {"key": "isMultiline", "type": "bool"},
        "max_length": {"key": "maxLength", "type": "float"},
    }

    def __init__(
        self,
        *,
        type=None,
        id: str = None,
        is_required: bool = None,
        title: str = None,
        value: str = None,
        is_multiline: bool = None,
        max_length: float = None,
        **kwargs
    ) -> None:
        super(O365ConnectorCardTextInput, self).__init__(
            type=type,
            id=id,
            is_required=is_required,
            title=title,
            value=value,
            **kwargs
        )
        self.is_multiline = is_multiline
        self.max_length = max_length

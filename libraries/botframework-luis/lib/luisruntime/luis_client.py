# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.service_client import ServiceClient
from msrest import Configuration, Serializer, Deserializer
from .version import VERSION
from .operations.prediction_operations import PredictionOperations
from . import models


class luis_clientConfiguration(Configuration):
    """Configuration for luis_client
    Note that all parameters used to create this instance are saved as instance
    attributes.

    :param azure_region: Supported Azure regions for Cognitive Services
     endpoints. Possible values include: 'westus', 'westeurope',
     'southeastasia', 'eastus2', 'westcentralus', 'westus2', 'eastus',
     'southcentralus', 'northeurope', 'eastasia', 'australiaeast',
     'brazilsouth'
    :type azure_region: str or ~luisruntime.models.AzureRegions
    """

    def __init__(
            self, azure_region):

        if azure_region is None:
            raise ValueError("Parameter 'azure_region' must not be None.")
        base_url = 'https://{AzureRegion}.api.cognitive.microsoft.com/luis/v2.0/apps'

        super(luis_clientConfiguration, self).__init__(base_url)

        self.add_user_agent('luis_client/{}'.format(VERSION))

        self.azure_region = azure_region


class luis_client(object):
    """luis_client

    :ivar config: Configuration for client.
    :vartype config: luis_clientConfiguration

    :ivar prediction: Prediction operations
    :vartype prediction: luisruntime.operations.PredictionOperations

    :param azure_region: Supported Azure regions for Cognitive Services
     endpoints. Possible values include: 'westus', 'westeurope',
     'southeastasia', 'eastus2', 'westcentralus', 'westus2', 'eastus',
     'southcentralus', 'northeurope', 'eastasia', 'australiaeast',
     'brazilsouth'
    :type azure_region: str or ~luisruntime.models.AzureRegions
    """

    def __init__(
            self, azure_region):

        self.config = luis_clientConfiguration(azure_region)
        self._client = ServiceClient(None, self.config)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self.api_version = 'v2.0'
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)

        self.prediction = PredictionOperations(
            self._client, self.config, self._serialize, self._deserialize)

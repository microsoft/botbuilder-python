# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License

from typing import Dict
from msrest.serialization import Model


class InstanceData(Model):
    """Contains recognition results generated by a recognizer."""

    _attribute_map = {
        'start_index': {'key': 'startIndex', 'type': 'int'},
        'end_index': {'key': 'endIndex', 'type': 'int'},
        'text': {'key': 'text', 'type': 'str'},
        'score': {'key': 'score', 'type': 'float'},
        'type': {'key': 'type', 'type': 'str'},
        'subtype': {'key': 'subtype', 'type': 'str'},
        'properties': {'key': 'properties', 'type': '{object}'}
    }

    def __init__(self, *, start_index: int = None, end_index: int = None, text: str = None, score: float = None,
                 type: str = None, subtype: str = None, properties: Dict[str, object] = None, **kwargs):
        super(RecognizerResult, self).__init__(**kwargs)
        self.start_index = start_index
        self.end_index = end_index
        self.text = text
        self.score = score
        self.type = type
        self.subtype = subtype
        self.properties = properties
